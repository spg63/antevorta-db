Reddit stuff:
    - Comments
        comment_attrs:
        int     autoincrement       // primary
        text    author              // Author of comment
        text    author_flair_text   // Flair text, if author has it
        text    body                // The content of the comment
        int [0] can_gild            // If the comment is gildable
        int [0] controversial_score // Is the comment controversial
        int     created_dt          // Date/time for comment posting
        text    distinguised        // Not sure
        int [0] been_edited         // True when the comment has been modified from original posting
        int [0] giled               // True if comment has been gilded
        text    post_id             // The hexadecimal id of the comment
        int [0] is_submitter        // True when the author also submitted the post
        text    link_id             // Hard link to the comment
        text    parent_id           // hexadecimal id of the parent comment (or post, if top-level comment)
        text    permalink           // HTML link to comment
        int     scraped_dt          // Date/time for comment scraping
        int [0] score               // Score of the comment
        int [0] is_stickied         // True if comment has been stickeied
        text    subreddit_name      // Name of subreddit the comment was posted in
        text    subreddit_id        // hexadecimal id of the subreddit
        text    subreddit_type      // Not sure
        int     intg_exp_1          // Built-in int expansion
        real    real_exp_1          // Built-in real expansion
        text    text_exp_1          // Built-in text expansion
        text    text_exp_2          // See above
        text    text_exp_3          // See above
        text    text_exp_4          // See above

    - Submissions:
        submission_attrs:
        int     autoincrement       // primary
        int [0] archived            // True if post has been archived
        text    author              // Author of post
        int [0] brand_safe          // True if it's okay for all advertisiers
        int [0] content_mode        // True if content mode -- dunno what that is though
        int     created_dt          // Date/time for submission posting
        text    distinguised        // Not sure
        text    host_domain         // If it's not reddit content, domain of hosting website
        int [0] edited              // True if submission has been edited
        int     gilded              // Gilding counter
        int [0] hidden              // True if hidden
        text    post_id             // hexa post id
        int [0] is_self_post        // Text only, no link
        int [0] is_video_post       // True when a video
        text    link_flair_text     // User flair
        int [0] is_locked           // True when locked
        int     num_comments        // Post comment counter
        text    media_author_name   // Name of author if external media
        text    media_provider_name // Name of external provider
        text    media_title         // Title of external media
        text    media_type          // Type of external media
        int     num_crossposts      // Number of crossposts to different subreddits
        int [0] over_18             // True if mature content
        text    permalink           // Permenant HTML link to post
        int [0] is_pinned           // True if a pinned post
        int     scraped_dt          // Date/time for submission scraping
        int     score               // Numeric score for submission at time of scraping
        text    selftext            // Body of post if it's selftext
        int [0] is_stickied         // True if stickied
        text    subreddit_name      // Name of the subreddit submission was posted in
        text    subreddit_id        // Hexa subreddit id
        text    subreddit_type      // Sub type
        text    title               // Title of the posting
        text    link_url            // URL to external link
        int     intg_exp_1          // Built-in int expansion
        int     intg_exp_2          // See above
        int     intg_exp_3          // See above
        real    real_exp_1          // Built-in real expansion
        real    real_exp_2          // See above
        text    text_exp_1          // See above
        text    text_exp_2          // See above
        text    text_exp_3          // See above
        text    text_exp_4          // See above
        text    text_exp_5          // See above
        text    text_exp_6          // See above
        text    text_exp_7          // See above
        text    text_exp_8          // See above
        text    text_exp_9          // See above

------------------------------------------------------------------------------------------------------------------------

Hollywood:
    - Movies
        - These tables need to be created in the specific order outlined below. Tables created first will be referenced
        by tables created later
        - After all tables have been created, some tables can be dropped:
            - Drop links_table
            - Drop movielens_movies
            - Drop tmdb_credits
        - All tables reside in the same DB shards.

        [DONE] 1st table: links_table          (link.csv)
            - Contains the mapping between movielens_movieid, tmdb_movieid, and imdb_movieid. Multiple other tables need
             to know this mapping as some data comes from movielens, some from tmdb, and there will be additional imdb
             data. Multiple foreign keys, on non-primary key columsn, would be necessary so the subsequent tables will
             instead reference this table during creation. Insertions are less efficient, selections are more efficient,
              and storage requirements are less efficient.

            int     autoincrement           // primary
            int     tmdb_movieid            // The movie id found in the tmdb data
            int     imdb_movieid            // The movie id found in the imdb data
            int     movielens_movieid       // The movielens id from the movielens dataset
            No indices


        [DONE] 2nd table: genome_tags          (genome_tags.csv)
            - Contains a tagid and the tag name. The tags are genres and other related words for movies
            int     autoincrement           // primary
            int     tagid                   // The id of the genome tag
            text    tag                     // The genome tag
            Index on tag


        [DONE] 3rd table: movielens_movies    (movie.csv)
            - Contains the list of movies in the movielens dataset, the movie title, and the most common genres
            associated with the movie
            int     autoincrement           // primary
            int     tmdb_movieid            // The movie id found in the tmdb data          (select from links_table)
            int     imdb_movieid            // The movie id found in the imdb data          (select from links_table)
            int     movielens_movieid       // The movielens id from the movielens dataset
            text    movielens_title         // The title of the movie according to movielens
            JSON    genres                  // Genres as assigned by movielens              (convert to json object)
            no indices


        [DONE] 4th table: tmdb_credits         (tmdb_5000_credits.csv)
            - Contains the movieid, title of movie, and JSON for cast and crew of movies
            int     autoincrement           // primary
            int     tmdb_movieid            // The movie id found in the tmdb data          (select from links_table)
            int     imdb_movieid            // The movie id found in the imdb data          (select from links_table)
            int     movielens_movieid       // The movielens id from the movielens dataset
            text    TMDB_title              // The title of the movie from TMDB
            JSON    cast                    // The entire cast from TMDB                    (convert to json object)
            JSON    crew                    // The entire crew from TMDB                    (convert to json object)
            no indices


        [DONE] 5th table: genome_scores        (genome_scores.csv)
            - Contains 60 of the most popular movies in the movielens dataset, as well as a FP relevance score for every
             genome tag in the dataset -- 1128 entries for each of the 60 movies

             int    autoincrement           // primary
             int    tmdb_movieid            // The movie id found in the tmdb data          (select from links_table)
             int    imdb_movieid            // The movie id found in the imdb data          (select from links_table)
             int    movielens_movieid       // The movielens id from the movielens dataset
             int    tagid                   // The id of the genome tag
             real   relevance               // A FP val denoting how relevant a specific tag is to the movie, normalized 0-1
             Indices for relevance for potential future use to compute least relevant tags, and tagid


        [DONE] 6th table: individual_tags      (tag.csv)
            - Contains the user who applied a tag to a movie and a corresponding datetime stamp

            int     autoincrement           // primary
            int     tmdb_movieid            // The movie id found in the tmdb data          (select from links_table)
            int     imdb_movieid            // The movie id found in the imdb data          (select from links_table)
            int     movielens_movieid       // The movielens id from the movielens dataset
            int     userid                  // numeric id for the user
            int     tagid                   // The numeric id for the tag                   (select from genome_tags)
            text    tag                     // The tag, as a string
            int     timestamp               // Unix time stamp                              (convert from julian to unix)
            Indices on userid, tagid, tag, and timestamp


        [DONE] t7th table: individual_ratings   (rating.csv)
            - Contains the userid for a rating, the movie id the rating is about, the FP rating, and a timestamp
            int     autoincrement           // primary
            int     tmdb_movieid            // The movie id found in the tmdb data          (select from links_table)
            int     imdb_movieid            // The movie id found in the imdb data          (select from links_table)
            int     movielens_movieid       // The movielens id from the movielens dataset
            int     userid                  // numeric if for the user
            real    rating                  // The FP rating from user for movie
            int     timestamp               // Unix time stamp from rating                  (convert from julian to unix)
            Indices on userid, rating, timestamp


        8th table: movies               (tmdb_5000_movies.csv, combination of others)
            - Pulls together a lot of the above information, has a lot of additional information about each movie and
            additional JSON data about cast, crew, genres that can be used now with the json1 sqlite extension, and may
            also be put into separate tables at a future time if the performance dictates this move.
            NOTE: This table will only contain data that's found in TMDB top 5000 movies and movielens datasets
            int     autoincrement
            int     tmdb_movieid            // The movie id from the tmdb data              (select from links_table)
            int     imdb_movieid            // The movie id found in the imdb data          (select from links_table)
            int     movielens_movieid       // The movie id from the movielens dateset
            int     budget                  // Budget information from TMDB
            JSON    tmdb_genres             // The TMDB genres, The movielens genome tags look more complete
            JSON    movielens_genres        // The movielens genres                         (select from movielens_movies)
            text    website                 // HTTP link to the movie website
            JSON    keywords                // Descriptive keywords for the movie
            text    original_language       // Release language
            text    original_title          // Original working title of movie
            text    overview                // Text overview of the movie
            real    tmdb_popularity         // Popularity assigned by tmdb, scale is unknown
            JSON    production_companies    // Production companies involved in the movie
            JSON    production_countries    // Countries where the movie was produced
            int     release_date            // Date of initial release                      (convert from julian to unix)
            int     revenue                 // Total reveune for movie
            int     runtime                 // How long the movie is
            JSON    spoken_languages        // JSON list of languages spoken in the movie
            int [0] [bool] released         // True if the movie has been released, else false
            text    tagline                 // The tagline the movie would be known for
            text    TMDB_title              // The title the movie was released with, from TMDB
            text    movielens_title         // The title from movielens                     (select from movielens_movies)
            real    tmdb_vote_average       // The average rating from TMDB, out of 10
            int     tmdb_vote_count         // Total votes cast, from TMDB dataset
            real    movielens_vote_average  // Need to calculate from individual_rating table (x2 for x/10 score)
            int     movielens_vote_count    // Total votes cast from movielens dataset      (This and the above from individual_ratings)
            JSON    cast                    // The actors in the movie                      (select from tmdb_credits)
            JSON    crew                    // The crew involved                            (select from tmdb_credits)
            Indices on budget, original_language, tmdb_popularity, revenue, runtime,
            tmdb_vote_average, movielens_vote_average, tmdb_vote_count, movielens_vote_count


------------------------------------------------------------------------------------------------------------------------
